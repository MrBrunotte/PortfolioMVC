@using Microsoft.AspNetCore.Identity
@model IEnumerable<StefanBrunotteWebPage.Models.AcademicViewModel>
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Academics List";
}
<div class="listGrid">
    <h1 class="listH1">Academic Qualifications</h1>
            <form class="form-inline formGrid" asp-action="ShowSearchResults">
                <div class="form-group SearchInputField">
                    <label for="SearchPhrase" class="control-label"></label>
                    <input name="SearchPhrase" class="form-control placeHolderText" placeholder="Search description keywords..." />
                </div>
                <div class="form-group searchInputBtn">
                    <input type="submit" value="Search" class="myBtnSearch" />
                    @if (SignInManager.IsSignedIn(User))
                    {
                        <a class="myBtnAdd createListBtn" asp-action="Create">Add New Course</a>
                    }
                </div>
            </form>
    <div id="divTable">
        <div id="headerTable">
            <div class="divHLi cellWidthOne listHeaderUni">
                @Html.DisplayNameFor(model => model.UniversityName)
            </div>
            <div class="divHLi cellWidthOne listHeaderCourse">
                @Html.DisplayNameFor(model => model.CourseName)
            </div>
            <div class="divHLi cellWidthTwo listHeaderUniDesc">
                @Html.DisplayNameFor(model => model.CourseCoversDescription)
            </div>
            <div class="divHLi cellWidthThree listHeaderExp">
                @Html.DisplayNameFor(model => model.ExperienceGainedDescription)
            </div>
            <div class="divHLi cellWidthFour listHeaderUniStart">
                @Html.DisplayNameFor(model => model.CourseStartDate)
            </div>
            <div class="divHLi cellWidthFour listHeaderUniEnd">
                @Html.DisplayNameFor(model => model.CourseEndDate)
            </div>
            <div class="divHLi cellWidthFour listHeaderUniDetails">
                Details
            </div>
        </div>
        <div id="bodyTable">
            @foreach (var item in Model)
            {
                    <div class="divCLi cellWidthOne listBodyUni">
                        @Html.DisplayFor(modelItem => item.UniversityName)
                    </div>
                    <div class="divCLi cellWidthOne listBodyCourse">
                        @Html.DisplayFor(modelItem => item.CourseName)
                    </div>
                    <div class="divCLi cellWidthTwo listBodyUniDesc">
                        @Html.DisplayFor(modelItem => item.CourseCoversDescription)
                    </div>
                    <div class="divCLi cellWidthThree listBodyExp">
                        @Html.DisplayFor(modelItem => item.ExperienceGainedDescription)
                    </div>
                    <div class="divCLi cellWidthFour listBodyUniStart">
                        @Html.DisplayFor(modelItem => item.CourseStartDate)
                    </div>
                    <div class="divCLi cellWidthFour listBodyUniEnd">
                        @Html.DisplayFor(modelItem => item.CourseEndDate)
                    </div>
                    <div class="divCLi cellWidthFour listBodyUniDetails">
                        @if (SignInManager.IsSignedIn(User))
                        {
                            <a class="tdDetails" asp-action="Details" asp-route-id="@item.Id">View</a>
                            <a class="tdDetails" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                            <a class="tdDetails" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                        }
                        else
                        {
                            <a class="tdDetails" asp-action="Details" asp-route-id="@item.Id">View</a>
                        }
                    </div>
            }
        </div>
    </div>
</div>
